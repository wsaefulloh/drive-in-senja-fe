{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\n/*!\n\n=========================================================\n* NextJS Argon Dashboard PRO - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/nextjs-argon-dashboard-pro\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classnames from \"classnames\"; // reactstrap components\n\nimport { Button, Card, CardHeader, CardBody, FormGroup, Form, Input, InputGroupAddon, InputGroupText, InputGroup, Container, Row, Col } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\n\nfunction Validation() {\n  const [focused, setFocused] = React.useState(false);\n  const [firstName, setfirstName] = React.useState(\"Mark\");\n  const [firstNameState, setfirstNameState] = React.useState(null);\n  const [lastName, setlastName] = React.useState(\"Otto\");\n  const [lastNameState, setlastNameState] = React.useState(null);\n  const [username, setusername] = React.useState(\"\");\n  const [usernameState, setusernameState] = React.useState(null);\n  const [city, setcity] = React.useState(\"\");\n  const [cityState, setcityState] = React.useState(null);\n  const [state, setstate] = React.useState(\"\");\n  const [stateState, setstateState] = React.useState(null);\n  const [zip, setzip] = React.useState(\"\");\n  const [zipState, setzipState] = React.useState(null);\n  const [checkbox, setcheckbox] = React.useState(false);\n  const [checkboxState, setcheckboxState] = React.useState(null);\n\n  const validateCustomStylesForm = () => {\n    if (firstName === \"\") {\n      setfirstNameState(\"invalid\");\n    } else {\n      setfirstNameState(\"valid\");\n    }\n\n    if (lastName === \"\") {\n      setlastNameState(\"invalid\");\n    } else {\n      setlastNameState(\"valid\");\n    }\n\n    if (username === \"\") {\n      setusernameState(\"invalid\");\n    } else {\n      setusernameState(\"valid\");\n    }\n\n    if (city === \"\") {\n      setcityState(\"invalid\");\n    } else {\n      setcityState(\"valid\");\n    }\n\n    if (state === \"\") {\n      setstateState(\"invalid\");\n    } else {\n      setstateState(\"valid\");\n    }\n\n    if (zip === \"\") {\n      setzipState(\"invalid\");\n    } else {\n      setzipState(\"valid\");\n    }\n\n    if (checkbox === false) {\n      setcheckboxState(\"invalid\");\n    } else {\n      setcheckboxState(\"valid\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(SimpleHeader, {\n      name: \"Form validation\",\n      parentName: \"Forms\"\n    }), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--6\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsx(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxs(\"div\", {\n            className: \"card-wrapper\",\n            children: [/*#__PURE__*/_jsxs(Card, {\n              children: [/*#__PURE__*/_jsx(CardHeader, {\n                children: /*#__PURE__*/_jsx(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Custom styles\"\n                })\n              }), /*#__PURE__*/_jsxs(CardBody, {\n                children: [/*#__PURE__*/_jsx(Row, {\n                  children: /*#__PURE__*/_jsx(Col, {\n                    lg: \"8\",\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      className: \"mb-0\",\n                      children: [\"For custom form validation messages, you\\u2019ll need to add the novalidate boolean attribute to your\", \" \", /*#__PURE__*/_jsx(\"code\", {\n                        children: `<form>`\n                      }), \". This disables the browser default feedback tooltips, but still provides access to the form validation APIs in JavaScript. \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"When attempting to submit, you\\u2019ll see the\", \" \", /*#__PURE__*/_jsx(\"code\", {\n                        children: \":invalid\"\n                      }), \" and \", /*#__PURE__*/_jsx(\"code\", {\n                        children: \":valid\"\n                      }), \" styles applied to your form controls.\"]\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(Form, {\n                  className: \"needs-validation\",\n                  noValidate: true,\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-row\",\n                    children: [/*#__PURE__*/_jsxs(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: [/*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-control-label\",\n                        htmlFor: \"validationCustom01\",\n                        children: \"First name\"\n                      }), /*#__PURE__*/_jsx(Input, {\n                        defaultValue: \"Mark\",\n                        id: \"validationCustom01\",\n                        placeholder: \"First name\",\n                        type: \"text\",\n                        valid: firstNameState === \"valid\",\n                        invalid: firstNameState === \"invalid\",\n                        onChange: e => {\n                          setfirstName(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setfirstNameState(\"invalid\");\n                          } else {\n                            setfirstNameState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"valid-feedback\",\n                        children: \"Looks good!\"\n                      })]\n                    }), /*#__PURE__*/_jsxs(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: [/*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-control-label\",\n                        htmlFor: \"validationCustom02\",\n                        children: \"Last name\"\n                      }), /*#__PURE__*/_jsx(Input, {\n                        defaultValue: \"Otto\",\n                        id: \"validationCustom02\",\n                        placeholder: \"Last name\",\n                        type: \"text\",\n                        valid: lastNameState === \"valid\",\n                        invalid: lastNameState === \"invalid\",\n                        onChange: e => {\n                          setlastName(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setlastNameState(\"invalid\");\n                          } else {\n                            setlastNameState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"valid-feedback\",\n                        children: \"Looks good!\"\n                      })]\n                    }), /*#__PURE__*/_jsxs(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: [/*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-control-label\",\n                        htmlFor: \"validationCustomUsername\",\n                        children: \"Username\"\n                      }), /*#__PURE__*/_jsx(Input, {\n                        \"aria-describedby\": \"inputGroupPrepend\",\n                        id: \"validationCustomUsername\",\n                        placeholder: \"Username\",\n                        type: \"text\",\n                        valid: usernameState === \"valid\",\n                        invalid: usernameState === \"invalid\",\n                        onChange: e => {\n                          setusername(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setusernameState(\"invalid\");\n                          } else {\n                            setusernameState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"Please choose a username.\"\n                      })]\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-row\",\n                    children: [/*#__PURE__*/_jsxs(Col, {\n                      className: \"mb-3\",\n                      md: \"6\",\n                      children: [/*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-control-label\",\n                        htmlFor: \"validationCustom03\",\n                        children: \"City\"\n                      }), /*#__PURE__*/_jsx(Input, {\n                        id: \"validationCustom03\",\n                        placeholder: \"City\",\n                        type: \"text\",\n                        valid: cityState === \"valid\",\n                        invalid: cityState === \"invalid\",\n                        onChange: e => {\n                          setcity(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setcityState(\"invalid\");\n                          } else {\n                            setcityState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"Please provide a valid city.\"\n                      })]\n                    }), /*#__PURE__*/_jsxs(Col, {\n                      className: \"mb-3\",\n                      md: \"3\",\n                      children: [/*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-control-label\",\n                        htmlFor: \"validationCustom04\",\n                        children: \"State\"\n                      }), /*#__PURE__*/_jsx(Input, {\n                        id: \"validationCustom04\",\n                        placeholder: \"State\",\n                        type: \"text\",\n                        valid: stateState === \"valid\",\n                        invalid: stateState === \"invalid\",\n                        onChange: e => {\n                          setstate(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setstateState(\"invalid\");\n                          } else {\n                            setstateState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"Please provide a valid state.\"\n                      })]\n                    }), /*#__PURE__*/_jsxs(Col, {\n                      className: \"mb-3\",\n                      md: \"3\",\n                      children: [/*#__PURE__*/_jsx(\"label\", {\n                        className: \"form-control-label\",\n                        htmlFor: \"validationCustom05\",\n                        children: \"Zip\"\n                      }), /*#__PURE__*/_jsx(Input, {\n                        id: \"validationCustom05\",\n                        placeholder: \"Zip\",\n                        type: \"text\",\n                        valid: zipState === \"valid\",\n                        invalid: zipState === \"invalid\",\n                        onChange: e => {\n                          setzip(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setzipState(\"invalid\");\n                          } else {\n                            setzipState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"Please provide a valid zip.\"\n                      })]\n                    })]\n                  }), /*#__PURE__*/_jsx(FormGroup, {\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"custom-control custom-checkbox mb-3\",\n                      children: [/*#__PURE__*/_jsx(\"input\", {\n                        className: \"custom-control-input\",\n                        defaultValue: \"\",\n                        id: \"invalidCheck\",\n                        type: \"checkbox\",\n                        valid: (checkboxState === \"valid\").toString(),\n                        invalid: (checkboxState === \"invalid\").toString(),\n                        onChange: e => {\n                          setcheckbox(e.target.value);\n\n                          if (e.target.value === \"\") {\n                            setcheckboxState(\"invalid\");\n                          } else {\n                            setcheckboxState(\"valid\");\n                          }\n                        }\n                      }), /*#__PURE__*/_jsx(\"label\", {\n                        className: \"custom-control-label\",\n                        htmlFor: \"invalidCheck\",\n                        children: \"Agree to terms and conditions\"\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"You must agree before submitting.\"\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(Button, {\n                    color: \"primary\",\n                    type: \"button\",\n                    onClick: validateCustomStylesForm,\n                    children: \"Submit form\"\n                  })]\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(Card, {\n              children: [/*#__PURE__*/_jsx(CardHeader, {\n                children: /*#__PURE__*/_jsx(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Browser defaults\"\n                })\n              }), /*#__PURE__*/_jsxs(CardBody, {\n                children: [/*#__PURE__*/_jsx(Row, {\n                  children: /*#__PURE__*/_jsx(Col, {\n                    lg: \"8\",\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      className: \"mb-0\",\n                      children: [\"Not interested in custom validation feedback messages or writing JavaScript to change form behaviors? All good, you can use the browser defaults. Try submitting the form below. Depending on your browser and OS, you\\u2019ll see a slightly different style of feedback. \", /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"br\", {}), \"While these feedback styles cannot be styled with CSS, you can still customize the feedback text through JavaScript.\"]\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(Form, {\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-row\",\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationDefault01\",\n                          children: \"First name\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          defaultValue: \"Mark\",\n                          id: \"validationDefault01\",\n                          placeholder: \"First name\",\n                          required: true,\n                          type: \"text\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationDefault02\",\n                          children: \"Last name\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          defaultValue: \"Otto\",\n                          id: \"validationDefault02\",\n                          placeholder: \"Last name\",\n                          required: true,\n                          type: \"text\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: classnames({\n                          focused: focused\n                        }),\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationDefaultUsername\",\n                          children: \"Username\"\n                        }), /*#__PURE__*/_jsxs(InputGroup, {\n                          children: [/*#__PURE__*/_jsx(InputGroupAddon, {\n                            addonType: \"prepend\",\n                            children: /*#__PURE__*/_jsx(InputGroupText, {\n                              id: \"inputGroupPrepend2\",\n                              children: \"@\"\n                            })\n                          }), /*#__PURE__*/_jsx(Input, {\n                            \"aria-describedby\": \"inputGroupPrepend2\",\n                            id: \"validationDefaultUsername\",\n                            placeholder: \"Username\",\n                            required: true,\n                            type: \"text\",\n                            onFocus: () => setFocused(true),\n                            onBlur: () => setFocused(false)\n                          })]\n                        })]\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-row\",\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationDefault03\",\n                          children: \"City\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          id: \"validationDefault03\",\n                          placeholder: \"City\",\n                          required: true,\n                          type: \"text\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationDefault04\",\n                          children: \"State\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          id: \"validationDefault04\",\n                          placeholder: \"State\",\n                          required: true,\n                          type: \"text\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationDefault05\",\n                          children: \"Zip\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          id: \"validationDefault05\",\n                          placeholder: \"Zip\",\n                          required: true,\n                          type: \"text\"\n                        })]\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(FormGroup, {\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"custom-control custom-checkbox mb-3\",\n                      children: [/*#__PURE__*/_jsx(\"input\", {\n                        className: \"custom-control-input\",\n                        defaultValue: \"\",\n                        id: \"invalidCheck2\",\n                        required: true,\n                        type: \"checkbox\"\n                      }), /*#__PURE__*/_jsx(\"label\", {\n                        className: \"custom-control-label\",\n                        htmlFor: \"invalidCheck2\",\n                        children: \"Agree to terms and conditions\"\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"You must agree before submitting.\"\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  })]\n                })]\n              })]\n            }), /*#__PURE__*/_jsxs(Card, {\n              children: [/*#__PURE__*/_jsx(CardHeader, {\n                children: /*#__PURE__*/_jsx(\"h3\", {\n                  className: \"mb-0\",\n                  children: \"Server side\"\n                })\n              }), /*#__PURE__*/_jsxs(CardBody, {\n                children: [/*#__PURE__*/_jsx(Row, {\n                  children: /*#__PURE__*/_jsx(Col, {\n                    lg: \"8\",\n                    children: /*#__PURE__*/_jsxs(\"p\", {\n                      className: \"mb-0\",\n                      children: [\"We recommend using client side validation, but in case you require server side, you can indicate invalid and valid form fields with \", /*#__PURE__*/_jsx(\"code\", {\n                        children: \".is-invalid\"\n                      }), \" and\", \" \", /*#__PURE__*/_jsx(\"code\", {\n                        children: \".is-valid\"\n                      }), \". Note that\", \" \", /*#__PURE__*/_jsx(\"code\", {\n                        children: \".invalid-feedback\"\n                      }), \" is also supported with these classes.\"]\n                    })\n                  })\n                }), /*#__PURE__*/_jsx(\"hr\", {}), /*#__PURE__*/_jsxs(Form, {\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-row\",\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: \"has-success\",\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationServer01\",\n                          children: \"First name\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          className: \"is-valid\",\n                          defaultValue: \"Mark\",\n                          id: \"validationServer01\",\n                          placeholder: \"First name\",\n                          required: true,\n                          type: \"text\"\n                        }), /*#__PURE__*/_jsx(\"div\", {\n                          className: \"valid-feedback\",\n                          children: \"Looks good!\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: \"has-success\",\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationServer02\",\n                          children: \"Last name\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          className: \"is-valid\",\n                          defaultValue: \"Otto\",\n                          id: \"validationServer02\",\n                          placeholder: \"Last name\",\n                          required: true,\n                          type: \"text\"\n                        }), /*#__PURE__*/_jsx(\"div\", {\n                          className: \"valid-feedback\",\n                          children: \"Looks good!\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"4\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: \"has-danger\",\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationServerUsername\",\n                          children: \"Username\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          \"aria-describedby\": \"inputGroupPrepend3\",\n                          className: \"is-invalid\",\n                          id: \"validationServerUsername\",\n                          placeholder: \"Username\",\n                          required: true,\n                          type: \"text\"\n                        })]\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"form-row\",\n                    children: [/*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"6\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: \"has-danger\",\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationServer03\",\n                          children: \"City\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          className: \"is-invalid\",\n                          id: \"validationServer03\",\n                          placeholder: \"City\",\n                          required: true,\n                          type: \"text\"\n                        }), /*#__PURE__*/_jsx(\"div\", {\n                          className: \"invalid-feedback\",\n                          children: \"Please provide a valid city.\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: \"has-danger\",\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationServer04\",\n                          children: \"State\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          className: \"is-invalid\",\n                          id: \"validationServer04\",\n                          placeholder: \"State\",\n                          required: true,\n                          type: \"text\"\n                        }), /*#__PURE__*/_jsx(\"div\", {\n                          className: \"invalid-feedback\",\n                          children: \"Please provide a valid state.\"\n                        })]\n                      })\n                    }), /*#__PURE__*/_jsx(Col, {\n                      className: \"mb-3\",\n                      md: \"3\",\n                      children: /*#__PURE__*/_jsxs(FormGroup, {\n                        className: \"has-danger\",\n                        children: [/*#__PURE__*/_jsx(\"label\", {\n                          className: \"form-control-label\",\n                          htmlFor: \"validationServer05\",\n                          children: \"Zip\"\n                        }), /*#__PURE__*/_jsx(Input, {\n                          className: \"is-invalid\",\n                          id: \"validationServer05\",\n                          placeholder: \"Zip\",\n                          required: true,\n                          type: \"text\"\n                        }), /*#__PURE__*/_jsx(\"div\", {\n                          className: \"invalid-feedback\",\n                          children: \"Please provide a valid zip.\"\n                        })]\n                      })\n                    })]\n                  }), /*#__PURE__*/_jsx(FormGroup, {\n                    className: \"has-danger\",\n                    children: /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"custom-control custom-checkbox mb-3\",\n                      children: [/*#__PURE__*/_jsx(\"input\", {\n                        className: \"custom-control-input is-invalid\",\n                        defaultValue: \"\",\n                        id: \"invalidCheck3\",\n                        required: true,\n                        type: \"checkbox\"\n                      }), /*#__PURE__*/_jsx(\"label\", {\n                        className: \"custom-control-label\",\n                        htmlFor: \"invalidCheck3\",\n                        children: \"Agree to terms and conditions\"\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"invalid-feedback\",\n                        children: \"You must agree before submitting.\"\n                      })]\n                    })\n                  }), /*#__PURE__*/_jsx(Button, {\n                    color: \"primary\",\n                    type: \"submit\",\n                    children: \"Submit form\"\n                  })]\n                })]\n              })]\n            })]\n          })\n        })\n      })\n    })]\n  });\n}\n\nValidation.layout = Admin;\nexport default Validation;","map":null,"metadata":{},"sourceType":"module"}