{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*!\n\n=========================================================\n* NextJS Argon Dashboard PRO - v1.1.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/nextjs-argon-dashboard-pro\n* Copyright 2021 Creative Tim (https://www.creative-tim.com)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React from \"react\"; // react plugin that prints a given react component\n\nimport ReactToPrint from \"react-to-print\"; // react component for creating dynamic tables\n\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\"; // react component used to create sweet alerts\n\nimport ReactBSAlert from \"react-bootstrap-sweetalert\"; // reactstrap components\n\nimport { Button, ButtonGroup, Card, CardHeader, Container, Row, Col, UncontrolledTooltip } from \"reactstrap\"; // layout for this page\n\nimport Admin from \"layouts/Admin.js\"; // core components\n\nimport SimpleHeader from \"components/Headers/SimpleHeader.js\";\nimport { dataTable } from \"variables/general\";\nconst pagination = paginationFactory({\n  page: 1,\n  alwaysShowAllBtns: true,\n  showTotal: true,\n  withFirstAndLast: false,\n  sizePerPageRenderer: ({\n    options,\n    currSizePerPage,\n    onSizePerPageChange\n  }) => /*#__PURE__*/_jsx(\"div\", {\n    className: \"dataTables_length\",\n    id: \"datatable-basic_length\",\n    children: /*#__PURE__*/_jsxs(\"label\", {\n      children: [\"Show\", \" \", /*#__PURE__*/_jsxs(\"select\", {\n        name: \"datatable-basic_length\",\n        \"aria-controls\": \"datatable-basic\",\n        className: \"form-control form-control-sm\",\n        onChange: e => onSizePerPageChange(e.target.value),\n        children: [/*#__PURE__*/_jsx(\"option\", {\n          value: \"10\",\n          children: \"10\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"25\",\n          children: \"25\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"50\",\n          children: \"50\"\n        }), /*#__PURE__*/_jsx(\"option\", {\n          value: \"100\",\n          children: \"100\"\n        })]\n      }), \" \", \"entries.\"]\n    })\n  })\n});\nconst {\n  SearchBar\n} = Search;\n\nfunction ReactBSTables() {\n  const [alert, setAlert] = React.useState(null);\n  const componentRef = React.useRef(null); // this function will copy to clipboard an entire table,\n  // so you can paste it inside an excel or csv file\n\n  const copyToClipboardAsTable = el => {\n    var body = document.body,\n        range,\n        sel;\n\n    if (document.createRange && window.getSelection) {\n      range = document.createRange();\n      sel = window.getSelection();\n      sel.removeAllRanges();\n\n      try {\n        range.selectNodeContents(el);\n        sel.addRange(range);\n      } catch (e) {\n        range.selectNode(el);\n        sel.addRange(range);\n      }\n\n      document.execCommand(\"copy\");\n    } else if (body.createTextRange) {\n      range = body.createTextRange();\n      range.moveToElementText(el);\n      range.select();\n      range.execCommand(\"Copy\");\n    }\n\n    setAlert( /*#__PURE__*/_jsx(ReactBSAlert, {\n      success: true,\n      style: {\n        display: \"block\",\n        marginTop: \"-100px\"\n      },\n      title: \"Good job!\",\n      onConfirm: () => setAlert(null),\n      onCancel: () => setAlert(null),\n      confirmBtnBsStyle: \"info\",\n      btnSize: \"\",\n      children: \"Copied to clipboard!\"\n    }));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [alert, /*#__PURE__*/_jsx(SimpleHeader, {\n      name: \"React Tables\",\n      parentName: \"Tables\"\n    }), /*#__PURE__*/_jsx(Container, {\n      className: \"mt--6\",\n      fluid: true,\n      children: /*#__PURE__*/_jsx(Row, {\n        children: /*#__PURE__*/_jsxs(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxs(Card, {\n            children: [/*#__PURE__*/_jsxs(CardHeader, {\n              children: [/*#__PURE__*/_jsx(\"h3\", {\n                className: \"mb-0\",\n                children: \"React Bootstrap Table 2\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"text-sm mb-0\",\n                children: \"This is an exmaple of data table using the well known react-bootstrap-table2 plugin. This is a minimal setup in order to get started fast.\"\n              })]\n            }), /*#__PURE__*/_jsx(ToolkitProvider, {\n              data: dataTable,\n              keyField: \"name\",\n              columns: [{\n                dataField: \"name\",\n                text: \"Name\",\n                sort: true\n              }, {\n                dataField: \"position\",\n                text: \"Position\",\n                sort: true\n              }, {\n                dataField: \"office\",\n                text: \"Office\",\n                sort: true\n              }, {\n                dataField: \"age\",\n                text: \"Age\",\n                sort: true\n              }, {\n                dataField: \"start_date\",\n                text: \"Start date\",\n                sort: true\n              }, {\n                dataField: \"salary\",\n                text: \"Salary\",\n                sort: true\n              }],\n              search: true,\n              children: props => /*#__PURE__*/_jsxs(\"div\", {\n                className: \"py-4 table-responsive\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  id: \"datatable-basic_filter\",\n                  className: \"dataTables_filter px-4 pb-1\",\n                  children: /*#__PURE__*/_jsxs(\"label\", {\n                    children: [\"Search:\", /*#__PURE__*/_jsx(SearchBar, _objectSpread({\n                      className: \"form-control-sm\",\n                      placeholder: \"\"\n                    }, props.searchProps))]\n                  })\n                }), /*#__PURE__*/_jsx(BootstrapTable, _objectSpread(_objectSpread({}, props.baseProps), {}, {\n                  bootstrap4: true,\n                  pagination: pagination,\n                  bordered: false\n                }))]\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(Card, {\n            children: [/*#__PURE__*/_jsxs(CardHeader, {\n              children: [/*#__PURE__*/_jsx(\"h3\", {\n                className: \"mb-0\",\n                children: \"Action buttons\"\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"text-sm mb-0\",\n                children: \"This is an exmaple of data table using the well known react-bootstrap-table2 plugin. This is a minimal setup in order to get started fast.\"\n              })]\n            }), /*#__PURE__*/_jsx(ToolkitProvider, {\n              data: dataTable,\n              keyField: \"name\",\n              columns: [{\n                dataField: \"name\",\n                text: \"Name\",\n                sort: true\n              }, {\n                dataField: \"position\",\n                text: \"Position\",\n                sort: true\n              }, {\n                dataField: \"office\",\n                text: \"Office\",\n                sort: true\n              }, {\n                dataField: \"age\",\n                text: \"Age\",\n                sort: true\n              }, {\n                dataField: \"start_date\",\n                text: \"Start date\",\n                sort: true\n              }, {\n                dataField: \"salary\",\n                text: \"Salary\",\n                sort: true\n              }],\n              search: true,\n              children: props => /*#__PURE__*/_jsxs(\"div\", {\n                className: \"py-4 table-responsive\",\n                children: [/*#__PURE__*/_jsx(Container, {\n                  fluid: true,\n                  children: /*#__PURE__*/_jsxs(Row, {\n                    children: [/*#__PURE__*/_jsxs(Col, {\n                      xs: 12,\n                      sm: 6,\n                      children: [/*#__PURE__*/_jsxs(ButtonGroup, {\n                        children: [/*#__PURE__*/_jsx(Button, {\n                          className: \"buttons-copy buttons-html5\",\n                          color: \"default\",\n                          size: \"sm\",\n                          id: \"copy-tooltip\",\n                          onClick: () => copyToClipboardAsTable(document.getElementById(\"react-bs-table\")),\n                          children: /*#__PURE__*/_jsx(\"span\", {\n                            children: \"Copy\"\n                          })\n                        }), /*#__PURE__*/_jsx(ReactToPrint, {\n                          trigger: () => /*#__PURE__*/_jsx(Button, {\n                            color: \"default\",\n                            size: \"sm\",\n                            className: \"buttons-copy buttons-html5\",\n                            id: \"print-tooltip\",\n                            children: \"Print\"\n                          }),\n                          content: () => componentRef.current\n                        })]\n                      }), /*#__PURE__*/_jsx(UncontrolledTooltip, {\n                        placement: \"top\",\n                        target: \"print-tooltip\",\n                        children: \"This will open a print page with the visible rows of the table.\"\n                      }), /*#__PURE__*/_jsx(UncontrolledTooltip, {\n                        placement: \"top\",\n                        target: \"copy-tooltip\",\n                        children: \"This will copy to your clipboard the visible rows of the table.\"\n                      })]\n                    }), /*#__PURE__*/_jsx(Col, {\n                      xs: 12,\n                      sm: 6,\n                      children: /*#__PURE__*/_jsx(\"div\", {\n                        id: \"datatable-basic_filter\",\n                        className: \"dataTables_filter px-4 pb-1 float-right\",\n                        children: /*#__PURE__*/_jsxs(\"label\", {\n                          children: [\"Search:\", /*#__PURE__*/_jsx(SearchBar, _objectSpread({\n                            className: \"form-control-sm\",\n                            placeholder: \"\"\n                          }, props.searchProps))]\n                        })\n                      })\n                    })]\n                  })\n                }), /*#__PURE__*/_jsx(BootstrapTable, _objectSpread(_objectSpread({\n                  ref: componentRef\n                }, props.baseProps), {}, {\n                  bootstrap4: true,\n                  pagination: pagination,\n                  bordered: false,\n                  id: \"react-bs-table\"\n                }))]\n              })\n            })]\n          })]\n        })\n      })\n    })]\n  });\n}\n\nReactBSTables.layout = Admin;\nexport default ReactBSTables;","map":null,"metadata":{},"sourceType":"module"}